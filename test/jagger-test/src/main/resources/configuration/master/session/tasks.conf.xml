<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2012 Grid Dynamics Consulting Services, Inc, All Rights Reserved
  ~ http://www.griddynamics.com
  ~
  ~ This library is free software; you can redistribute it and/or modify it under the terms of
  ~ the GNU Lesser General Public License as published by the Free Software Foundation; either
  ~ version 2.1 of the License, or any later version.
  ~
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  ~ AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  ~ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  ~ DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
  ~ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  ~ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  ~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  ~ CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  ~ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  ~ OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="endpointConfigurator" class="com.griddynamics.jagger.invoker.EndpointConfigurator">
        <property name="urls" value="${test.service.endpoints}"/>
    </bean>

    <bean id="emptyTestQuery" class="com.griddynamics.jagger.invoker.http.HttpQuery">
        <property name="method" value="GET" />
        <property name="clientParams">
            <map>
                <entry key="http.protocol.allow-circular-redirects">
                    <bean class="java.lang.Boolean">
                        <constructor-arg value="false"/>
                    </bean>
                </entry>
                <entry key="http.protocol.max-redirects">
                    <bean class="java.lang.Integer">
                        <constructor-arg value="2"/>
                    </bean>
                </entry>
                <entry key="http.connection-manager.timeout">
                    <bean class="java.lang.Long"><constructor-arg value="5000" /></bean>
                </entry>
                <entry key="http.protocol.max-redirects">
                    <bean class="java.lang.Integer"><constructor-arg value="0" /></bean>
                </entry>
            </map>
        </property>
    </bean>


    <bean id="testAbstractWorkload" abstract="true"
          class="com.griddynamics.jagger.engine.e1.scenario.WorkloadTask">
        <property name="collectors">
            <list>
                <ref bean="durationCollector"/>
                <ref bean="informationCollector"/>
                <ref bean="diagnosticCollector"/>
            </list>
        </property>
    </bean>

    <bean id="abstractSleep5msTask" parent="testAbstractWorkload" abstract="true">
        <property name="name" value="sleep-service-5ms"/>
        <property name="version" value="1"/>
        <property name="scenarioFactory">
            <bean class="com.griddynamics.jagger.invoker.QueryPoolScenarioFactory">
                <property name="loadBalancer">
                    <bean class="com.griddynamics.jagger.invoker.RoundRobinLoadBalancer">
                        <constructor-arg>
                            <list>
                                <ref bean="emptyTestQuery"/>
                            </list>
                        </constructor-arg>
                        <constructor-arg>
                            <bean class="org.springframework.beans.factory.config.ListFactoryBean">
                                <property name="sourceList" value="#{endpointConfigurator.getEndpoints('/sleep/5')}"/>
                            </bean>
                        </constructor-arg>
                    </bean>
                </property>
                <property name="invokerClazz" value="com.griddynamics.jagger.invoker.http.HttpInvoker"/>
            </bean>
        </property>
    </bean>

    <bean id="abstractSleep50msTask" parent="testAbstractWorkload" abstract="true">
        <property name="name" value="sleep-service-50ms"/>
        <property name="version" value="1"/>
        <property name="scenarioFactory">
            <bean class="com.griddynamics.jagger.invoker.QueryPoolScenarioFactory">
                <property name="loadBalancer">
                    <bean class="com.griddynamics.jagger.invoker.RoundRobinLoadBalancer">
                        <constructor-arg>
                            <list>
                                <ref bean="emptyTestQuery"/>
                            </list>
                        </constructor-arg>
                        <constructor-arg>
                            <bean class="org.springframework.beans.factory.config.ListFactoryBean">
                                <property name="sourceList" value="#{endpointConfigurator.getEndpoints('/sleep/50')}"/>
                            </bean>
                        </constructor-arg>
                    </bean>
                </property>
                <property name="invokerClazz" value="com.griddynamics.jagger.invoker.http.HttpInvoker"/>
            </bean>

        </property>
    </bean>

    <bean id="abstractSleepRandom50to150msTask" parent="testAbstractWorkload" abstract="true">
        <property name="name" value="sleep-service-50ms"/>
        <property name="version" value="1"/>
        <property name="scenarioFactory">
            <bean class="com.griddynamics.jagger.invoker.QueryPoolScenarioFactory">
                <property name="loadBalancer">
                    <bean class="com.griddynamics.jagger.invoker.RoundRobinLoadBalancer">
                        <constructor-arg>
                            <list>
                                <ref bean="emptyTestQuery"/>
                            </list>
                        </constructor-arg>
                        <constructor-arg>
                            <bean class="org.springframework.beans.factory.config.ListFactoryBean">
                                <property name="sourceList" value="#{endpointConfigurator.getEndpoints('/sleep/50-150')}"/>
                            </bean>
                        </constructor-arg>
                    </bean>
                </property>
                <property name="invokerClazz" value="com.griddynamics.jagger.invoker.http.HttpInvoker"/>
            </bean>

        </property>
    </bean>
</beans>