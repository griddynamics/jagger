/// @page AuxRunTests Functional tests to verify Jagger framework
/// @brief This chapter is dedicated to the functional testing of the Jagger framework
/// @details
/// @n
/// Jagger project contains two test suits for functional testing
///
/// @li @ref section_java_builder_test
/// @li @ref section_jaas_tests
///
/// @section section_java_builder_test Configuration and load generation functional tests
///
/// Test suit contains smoke tests to check that java based Jagger configuration can be used without any exceptions. @n
/// Also there are tests to verify that Jagger generates load as specified in appropriate @ref Main_Load_profiles_group "load profile" in java configuration. @n
/// Test suite is a test, written with use of the Jagger framework @n
/// Test project: `test/java-builder-tests` @n
/// Scenario Id: `JaggerSmokeTests` @n
///
/// To run test:
/// @li Optional: Edit `profiles/basic/environment.properties` to configure Jagger.
/// Default connection is to local H2 DB. See more information about jagger configuration in the @ref JaggerProperties "Jagger configuration section"
/// @li Optional: Edit `test.properties` file to configure `test.service.endpoints` property - single value or comma separated list with path to SUT.
/// You may specify this property later in "start test" step.
/// @li Build Jagger project
/// @code
/// cd {jagger-root-folder}
/// mvn clean install
/// @endcode
/// @li Start test target
/// @code
/// cd test/test-target/target
/// java -jar test-target-{version}-war-exec.jar
/// @endcode
/// @li Start test
/// @code
/// cd {jagger-root-folder}/test/java-builder-tests/target/java-builder-tests-{version}-full/
/// ./start.sh profiles/basic/environment.properties -Dtest.service.endpoints=http://localhost:8080
/// @endcode
///
/// @section section_jaas_tests JaaS and Http functional tests
/// Test suite contains smoke test to check @ref JaasMain "JaaS REST API" and verify @ref @ref Main_Http_group "Http support components" of the framework. @n
/// Test suite is a test, written with use of the Jagger framework @n
/// Test project: `test/jaas-tests` @n
/// Scenario Id: `ts_JaaSTestSuit` @n
///
/// To run test:
/// @li Optional: Edit `profiles/basic/environment.properties` to configure Jagger.
/// Default connection is to local H2 DB. See more information about jagger configuration in the @ref JaggerProperties "Jagger configuration section"
/// @li Optional: Edit `test.properties` file to configure `jaas.endpoint` with path to JaaS SUT.@n
/// You may specify this property later in "start test" step.
/// @li Build Jagger project
/// @code
/// cd {jagger-root-folder}
/// mvn clean install
/// @endcode
/// @li Edit `docker/compose/target/context/docker-compose-with-existing-results-db.yml` to configure Jagger DB.
/// Jagger DB should contains information about at least one test session with test contains metrics with both plot data and summary information.
/// For example, DB with results of @ref section_java_builder_test run may be used.
/// @li Run docker compose.
/// @code
/// cd docker/compose/target/context
/// docker-compose -f docker-compose-with-existing-results-db.yml up
/// @endcode
/// @li Start test
/// @code
/// cd {jagger-root-folder}/test/jaas-tests/target/jaas-tests-{version}-full/
/// ./start.sh profiles/basic/environment.properties -Djaas.endpoint=http://localhost:8088
/// @endcode